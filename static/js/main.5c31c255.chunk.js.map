{"version":3,"sources":["actions/logActions.js","actions/types.js","components/layout/SearchBar.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","components/layout/AddBtn.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logReducer.js","reducers/techReducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["setLoading","type","connect","searchLogs","text","dispatch","a","async","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","e","current","value","htmlFor","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","disabled","checked","newLog","Date","updateLog","upLog","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c31c255.chunk.js","sourcesContent":["import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  UPDATE_LOG,\n  SEARCH_LOGS,\n  SET_CURRENT,\n  CLEAR_CURRENT\n} from \"./types\";\n\n// Get logs from server\nexport const getLogs = () => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch(\"/logs\");\n    const data = await res.json();\n\n    dispatch({\n      type: GET_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Add new log\nexport const addLog = log => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch(\"/logs\", {\n      method: \"POST\",\n      body: JSON.stringify(log),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: ADD_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Delete log from server\nexport const deleteLog = id => async dispatch => {\n  try {\n    setLoading();\n\n    await fetch(`/logs/${id}`, {\n      method: \"DELETE\"\n    });\n\n    dispatch({\n      type: DELETE_LOG,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Update log on server\nexport const updateLog = log => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch(`/logs/${log.id}`, {\n      method: \"PUT\",\n      body: JSON.stringify(log),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n\n    const data = await res.json();\n\n    dispatch({\n      type: UPDATE_LOG,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Search server logs\nexport const searchLogs = text => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch(`/logs?q=${text}`);\n    const data = await res.json();\n\n    dispatch({\n      type: SEARCH_LOGS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: LOGS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Set current log\nexport const setCurrent = log => {\n  return {\n    type: SET_CURRENT,\n    payload: log\n  };\n};\n\n// Clear current log\nexport const clearCurrent = () => {\n  return {\n    type: CLEAR_CURRENT\n  };\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\n","export const GET_LOGS = \"GET_LOGS\";\nexport const ADD_LOG = \"ADD_LOG\";\nexport const DELETE_LOG = \"DELETE_LOG\";\nexport const SET_CURRENT = \"SET_CURRENT\";\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\nexport const UPDATE_LOG = \"UPDATE_LOG\";\nexport const CLEAR_LOGS = \"CLEAR_LOGS\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const LOGS_ERROR = \"LOGS_ERROR\";\nexport const SEARCH_LOGS = \"SEARCH_LOGS\";\nexport const GET_TECHS = \"GET_TECHS\";\nexport const ADD_TECH = \"ADD_TECH\";\nexport const DELETE_TECH = \"DELETE_TECH\";\nexport const TECHS_ERROR = \"TECHS_ERROR\";\n","import React, { useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { searchLogs } from \"../../actions/logActions\";\n\nconst SearchBar = ({ searchLogs }) => {\n  const text = useRef(\"\");\n\n  const onChange = e => {\n    searchLogs(text.current.value);\n  };\n\n  return (\n    <nav style={{ marginBottom: \"30px\" }} className='blue'>\n      <div className='nav-wrapper'>\n        <form>\n          <div className='input-field'>\n            <input\n              id='search'\n              type='search'\n              placeholder='Search Logs..'\n              ref={text}\n              onChange={onChange}\n            />\n            <label className='label-icon' htmlFor='search'>\n              <i className='material-icons'>search</i>\n            </label>\n            <i className='material-icons'>close</i>\n          </div>\n        </form>\n      </div>\n    </nav>\n  );\n};\n\nSearchBar.propTypes = {\n  searchLogs: PropTypes.func.isRequired\n};\n\nexport default connect(null, { searchLogs })(SearchBar);\n","import React from \"react\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { deleteLog, setCurrent } from \"../../actions/logActions\";\n\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\n  const onDelete = () => {\n    deleteLog(log.id);\n    M.toast({ html: \"Log Deleted\" });\n  };\n\n  return (\n    <li className='collection-item'>\n      <div>\n        <a\n          href='#edit-log-modal'\n          className={`modal-trigger ${\n            log.attention ? \"red-text\" : \"blue-text\"\n          }`}\n          onClick={() => setCurrent(log)}\n        >\n          {log.message}\n        </a>\n        <br />\n        <span className='grey-text'>\n          <span className='black-text'>ID #{log.id}</span> last updated by{\" \"}\n          <span className='black-text'>{log.tech}</span> on{\" \"}\n          <Moment format='MMMM Do YYYY, h:mm:ss a'>{log.date}</Moment>\n        </span>\n        <a href='#!' onClick={onDelete} className='secondary-content'>\n          <i className='material-icons grey-text'>delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nLogItem.propTypes = {\n  log: PropTypes.object.isRequired,\n  deleteLog: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\n","import React from \"react\";\n\nconst Preloader = () => {\n  return (\n    <div className='progress blue ligthen-4'>\n      <div className='indeterminate blue'></div>\n    </div>\n  );\n};\n\nexport default Preloader;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport LogItem from \"./LogItem\";\nimport Preloader from \"../layout/Preloader\";\nimport PropTypes from \"prop-types\";\nimport { getLogs } from \"../../actions/logActions\";\n\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\n  useEffect(() => {\n    getLogs();\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading || logs === null) {\n    return <Preloader />;\n  }\n\n  return (\n    <ul className='collection with-header'>\n      <li className='collection-header'>\n        <h4 className='center'>System Logs</h4>\n      </li>\n      {!loading && logs.length === 0 ? (\n        <p className='center'>No logs to show...</p>\n      ) : (\n        logs.map(log => <LogItem log={log} key={log.id} />)\n      )}\n    </ul>\n  );\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  log: state.log\n});\n\nexport default connect(mapStateToProps, { getLogs })(Logs);\n","import React from \"react\";\n\nconst AddBtn = () => {\n  return (\n    <div className='fixed-action-btn'>\n      <a\n        href='#add-log-modal'\n        className='btn-floating btn-large blue darken-2 modal-trigger'\n      >\n        <i className='large material-icons'>add</i>\n      </a>\n      <ul>\n        <li>\n          <a\n            href='#tech-list-modal'\n            className='btn-floating green modal-trigger'\n          >\n            <i className='material-icons'>person</i>\n          </a>\n        </li>\n        <li>\n          <a href='#add-tech-modal' className='btn-floating red modal-trigger'>\n            <i className='material-icons'>person_add</i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR\n} from \"./types\";\n\n// Get techs from server\nexport const getTechs = () => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch(\"/techs\");\n    const data = await res.json();\n\n    dispatch({\n      type: GET_TECHS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Add tech to server\nexport const addTech = tech => async dispatch => {\n  try {\n    setLoading();\n\n    const res = await fetch(\"/techs\", {\n      method: \"POST\",\n      body: JSON.stringify(tech),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const data = await res.json();\n\n    dispatch({\n      type: ADD_TECH,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Delete tech\nexport const deleteTech = id => async dispatch => {\n  try {\n    setLoading();\n\n    await fetch(`/techs/${id}`, {\n      method: \"DELETE\"\n    });\n\n    dispatch({\n      type: DELETE_TECH,\n      payload: id\n    });\n  } catch (err) {\n    dispatch({\n      type: TECHS_ERROR,\n      payload: err.response.statusText\n    });\n  }\n};\n\n// Set loading to true\nexport const setLoading = () => {\n  return {\n    type: SET_LOADING\n  };\n};\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getTechs } from \"../../actions/techActions\";\n\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n    // eslint-disable-next-line\n  }, []);\n  return (\n    !loading &&\n    techs !== null &&\n    techs.map(t => (\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\n        {t.firstName} {t.lastName}\n      </option>\n    ))\n  );\n};\n\nTechSelectOptions.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\n","import React, { useState } from \"react\";\nimport TechSelectOptions from \"../techs/TechSelectOptions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addLog } from \"../../actions/logActions\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst AddLogModal = ({ addLog }) => {\n  const [message, setMessage] = useState(\"\");\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState(\"\");\n\n  const onSubmit = () => {\n    if (message === \"\" || tech === \"\") {\n      M.toast({ html: \"Please enter a message and tech\" });\n    } else {\n      const newLog = {\n        message,\n        attention,\n        tech,\n        date: new Date()\n      };\n      addLog(newLog);\n\n      M.toast({ html: `Log added by ${tech}` });\n\n      // Clear Fields\n      setMessage(\"\");\n      setTech(\"\");\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id='add-log-modal' className='modal' style={modalStyle}>\n      <div className='modal-content'>\n        <h4>Enter System Log</h4>\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='message'\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n            />\n            <label htmlFor='message' className='active'>\n              Log Message\n            </label>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='input-field'>\n            <select\n              name='tech'\n              value={tech}\n              className='browser-default'\n              onChange={e => setTech(e.target.value)}\n            >\n              <option value='' disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='input-field'>\n            <p>\n              <label>\n                <input\n                  type='checkbox'\n                  className='filled-in'\n                  checked={attention}\n                  value={attention}\n                  onChange={e => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect blue waves-green btn '\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nAddLogModal.propTypes = {\n  addLog: PropTypes.func.isRequired\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\n\nexport default connect(null, { addLog })(AddLogModal);\n","import React, { useState, useEffect } from \"react\";\nimport TechSelectOptions from \"../techs/TechSelectOptions\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { updateLog } from \"../../actions/logActions\";\n\nconst EditLogModal = ({ current, updateLog }) => {\n  const [message, setMessage] = useState(\"\");\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState(\"\");\n\n  useEffect(() => {\n    if (current) {\n      setMessage(current.message);\n      setAttention(current.attention);\n      setTech(current.tech);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    if (message === \"\" || tech === \"\") {\n      M.toast({ html: \"Please enter a message and tech\" });\n    } else {\n      const upLog = {\n        id: current.id,\n        message,\n        attention,\n        tech,\n        date: new Date()\n      };\n      updateLog(upLog);\n      M.toast({ html: `Log updated by ${tech}` });\n\n      // Clear Fields\n      setMessage(\"\");\n      setTech(\"\");\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id='edit-log-modal' className='modal' style={modalStyle}>\n      <div className='modal-content'>\n        <h4>Enter System Log</h4>\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='message'\n              value={message}\n              onChange={e => setMessage(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className='row'>\n          <div className='input-field'>\n            <select\n              name='tech'\n              value={tech}\n              className='browser-default'\n              onChange={e => setTech(e.target.value)}\n            >\n              <option value='' disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='input-field'>\n            <p>\n              <label>\n                <input\n                  type='checkbox'\n                  className='filled-in'\n                  checked={attention}\n                  value={attention}\n                  onChange={e => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className='modal-footer'>\n        <a\n          href='#!'\n          onClick={onSubmit}\n          className='modal-close waves-effect blue waves-green btn '\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\"\n};\n\nEditLogModal.propTypes = {\n  current: PropTypes.object,\n  updateLog: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  current: state.log.current\n});\n\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addTech } from \"../../actions/techActions\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst AddTechModal = ({ addTech }) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const onSubmit = () => {\n    if (firstName === \"\" || lastName === \"\") {\n      M.toast({ html: \"Please enter a firstname and a lastname\" });\n    } else {\n      addTech({\n        firstName,\n        lastName\n      });\n      M.toast({ html: `${firstName} ${lastName} was added as a tech` });\n      // Clear Fields\n      setFirstName(\"\");\n      setLastName(\"\");\n    }\n  };\n\n  return (\n    <div id='add-tech-modal' className='modal'>\n      <div className='modal-content'>\n        <h4>New Technician</h4>\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='firstName'\n              value={firstName}\n              onChange={e => setFirstName(e.target.value)}\n            />\n            <label htmlFor='firstName' className='active'>\n              First Name\n            </label>\n          </div>\n        </div>\n\n        <div className='row'>\n          <div className='input-field'>\n            <input\n              type='text'\n              name='lastName'\n              value={lastName}\n              onChange={e => setLastName(e.target.value)}\n            />\n            <label htmlFor='firstName' className='active'>\n              Last Name\n            </label>\n          </div>\n        </div>\n\n        <div className='modal-footer'>\n          <a\n            href='#!'\n            onClick={onSubmit}\n            className='modal-close waves-effect blue waves-green btn '\n          >\n            Enter\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nAddTechModal.propTypes = {\n  addTech: PropTypes.func.isRequired\n};\n\nexport default connect(null, { addTech })(AddTechModal);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { deleteTech } from \"../../actions/techActions\";\nimport PropTypes from \"prop-types\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst TechItem = ({ tech: { firstName, lastName, id }, deleteTech }) => {\n  const onDelete = () => {\n    deleteTech(id);\n    M.toast({ html: \"Technician deleted\" });\n  };\n\n  return (\n    <li className='collection-item'>\n      <div>\n        {firstName} {lastName}\n        <a href='#!' className='secondary-content' onClick={onDelete}>\n          <i className='material-icons grey-text'>delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nTechItem.propTypes = {\n  tech: PropTypes.object.isRequired,\n  deleteTech: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteTech })(TechItem);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport TechItem from \"./TechItem\";\nimport PropTypes from \"prop-types\";\nimport { getTechs } from \"../../actions/techActions\";\n\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div id='tech-list-modal' className='modal'>\n      <div className='modal-content'>\n        <h4>Technician List</h4>\n        <ul className='collection'>\n          {!loading &&\n            techs !== null &&\n            techs.map(tech => <TechItem tech={tech} key={tech.id} />)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTechListModal.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n});\n\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\n","import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  UPDATE_LOG,\n  SEARCH_LOGS,\n  SET_CURRENT,\n  CLEAR_CURRENT\n} from \"../actions/types\";\n\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n        loading: false\n      };\n    case ADD_LOG:\n      return {\n        ...state,\n        logs: [...state.logs, action.payload],\n        loading: false\n      };\n    case DELETE_LOG:\n      return {\n        ...state,\n        logs: state.logs.filter(log => log.id !== action.payload),\n        loading: false\n      };\n    case UPDATE_LOG:\n      return {\n        ...state,\n        logs: state.logs.map(log =>\n          log.id === action.payload.id ? action.payload : log\n        )\n      };\n    case SEARCH_LOGS:\n      return {\n        ...state,\n        logs: action.payload\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  SET_LOADING,\n  TECHS_ERROR\n} from \"../actions/types\";\n\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_TECHS:\n      return {\n        ...state,\n        techs: action.payload,\n        loading: false\n      };\n    case ADD_TECH:\n      return {\n        ...state,\n        techs: [...state.techs, action.payload],\n        loading: false\n      };\n    case DELETE_TECH:\n      return {\n        ...state,\n        techs: state.techs.filter(tech => tech.id !== action.payload),\n        loading: false\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    case TECHS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport logReducer from \"./logReducer\";\nimport techReducer from \"./techReducer\";\n\nexport default combineReducers({\n  log: logReducer,\n  tech: techReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from \"react\";\nimport SearchBar from \"./components/layout/SearchBar\";\nimport Logs from \"./components/logs/Logs\";\nimport AddBtn from \"./components/layout/AddBtn\";\nimport AddLogModal from \"./components/logs/AddLogModal\";\nimport EditLogModal from \"./components/logs/EditLogModal\";\nimport AddTechModal from \"./components/techs/AddTechModal\";\nimport TechListModal from \"./components/techs/TechListModal\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nconst App = () => {\n  useEffect(() => {\n    // Init Materialize JS\n    M.AutoInit();\n  });\n\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div className='container'>\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}